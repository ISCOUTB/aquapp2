---

- hosts: 192.34.79.171
  remote_user: ubuntu
  become: yes
  become_method: sudo

  vars:
    app_name: aquapp
    repo_url: https://github.com/IngenieriaDeSistemasUTB/aquapp2.git
    repo_remote: origin
    repo_version: master
    webapps_dir: /srv/webapps
    domain_name: aquapp.utb.services
    mail: jairo.serrano@gmail.com

  tasks:

    - name: add nginx
      action: apt_repository repo={{ item }} state=present
      with_items:
        - ppa:nginx/stable
        - ppa:certbot/certbot

    - name: install main packages for python nginx build-essential
      action: apt pkg={{ item }} state=installed update_cache=yes state=latest
      with_items:
        - git
        - nginx
        - build-essential
        - ufw
        - python-certbot-nginx
        - php-mcrypt
        - php-gd
        - php-mbstring
        - mysql-server
        - php-fpm
        - php-mysql

    # configure firewall
    - name: Enable UFW
      ufw: direction=incoming policy=deny state=enabled
      tags: ufw

    - name: UFW limit SSH
      ufw: rule=limit port=ssh
      tags: ufw

    - name: UFW open HTTP
      ufw: rule=allow port=http
      tags: ufw

    - name: UFW open HTTPS
      ufw: rule=allow port=https
      tags: ufw
    # end firewall configuration

    # composer install
    - name: download composer
      get_url:
        url: https://getcomposer.org/composer.phar
        dest: /usr/bin/composer
        mode: a+x
      tags: composer
    # end composer install task

    - name: Certbot nginx standalone
      shell: certbot certonly --agree-tos --standalone --non-interactive --text --rsa-key-size 4096  --email {{ mail }} --domains {{ domain_name }}
      tags: nginx

    - name: remove default nginx site
      action: file path=/etc/nginx/sites-enabled/default state=absent
      tags: nginx

    - name: write nginx.conf
      action: template src=templates/nginx.conf dest=/etc/nginx/nginx.conf
      tags: nginx

    - name: create webapps directory
      action: file dest=/srv/webapps state=directory
      tags: nginx

    - name: ensure log directory
      action: file dest={{ webapps_dir }}/{{ app_name }}/log state=directory

    - name: deploy code from repository
      action: git repo={{ repo_url }} dest={{ webapps_dir }}/{{ app_name }}/src remote={{ repo_remote }} version={{ repo_version }}

    - name: create nginx site config
      action: template src=templates/nginx_site.conf dest=/etc/nginx/sites-available/{{ app_name }}
      notify:
        - restart nginx

    - name: Secure php cgi
      shell: echo "cgi.fix_pathinfo=0" >> /etc/php/7.0/fpm/php.ini

    - name: Add deploy key
      shell: echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDWYVynuwFbLCbAYxy/+VOZ+e4D/3TbSqFKafcX0FDdohLFqjCsU34rtryG07/kMfSjbe2BrRDG+gxho+9U22QP/+/lgIfKMAM1qo8uDDHnlFor2x122sbRuZYTUP2AOYO9fBGOiIU9T3sWRzZ9yWHQu3rYLckZgRrOWKTRRHzQdTVo5wnT+NJm7BNEQLSdXEpZgMw9RTwFYvUcPgPX/scMwG2coyyV94xKfC71ONF/QZ9koIO7ahjLY8nSJ8ZGK4ECDkqMj8YVvMKbbRyBLTIxfrUjFOcUrpjpRp+XiQmb1buQzpHk0IKPuoAqxJEBRep2T4l/Gn3KKwimCDp+V/jj" >> /home/ubuntu/.ssh/authorized_keys

  handlers:
    - name: restart nginx
      action: service name=nginx state=restarted

    - name: restart php7.0-fpm
      action: service name=php7.0-fpm state=restarted
